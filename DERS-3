--Verilen Customers ve Orders tablolarını kullanarak, Customers tablosundaki müşterileri ve onların verdikleri siparişleri birleştirerek listeleyin. Müşteri adı, sipariş ID'si ve sipariş tarihini gösterin.
--Verilen Suppliers ve Products tablolarını kullanarak tüm tedarikçileri ve onların sağladıkları ürünleri listeleyin. Eğer bir tedarikçinin ürünü yoksa, NULL olarak gösterilsin.
--Verilen Employees ve Orders tablolarını kullanarak tüm siparişleri ve bu siparişleri işleyen çalışanları listeleyin. Eğer bir sipariş bir çalışan tarafından işlenmediyse, çalışan bilgileri NULL olarak gösterilsin.
--Verilen Customers ve Orders tablolarını kullanarak tüm müşterileri ve tüm siparişleri listeleyin. Sipariş vermeyen müşteriler ve müşterisi olmayan siparişler için NULL döndürün.
--Verilen Products ve Categories tablolarını kullanarak tüm ürünler ve tüm kategoriler için olası tüm kombinasyonları listeleyin. Sonuç kümesindeki her satır bir ürün ve bir kategori kombinasyonunu göstermelidir.
--Verilen Orders, Customers, Employees tablolarını kullanarak bu tabloları birleştirin ve 1998 yılında verilen siparişleri listeleyin. Müşteri adı, sipariş ID'si, sipariş tarihi ve ilgili çalışan adı gösterilsin.
--Verilen Orders ve Customers tablolarını kullanarak müşterileri, verdikleri sipariş sayısına göre gruplandırın. Sadece 5’ten fazla sipariş veren müşterileri listeleyin.
--Verilen OrderDetails ve Products tablolarını kullanarak her ürün için kaç adet satıldığını ve toplam satış miktarını listeleyin. Ürün adı, satılan toplam adet ve toplam kazancı (Quantity * UnitPrice) gösterin.
--Verilen Customers ve Orders tablolarını kullanarak, müşteri adı "B" harfiyle başlayan müşterilerin siparişlerini listeleyin.
--Verilen Products ve Categories tablolarını kullanarak tüm kategorileri listeleyin ve ürünleri olmayan kategorileri bulun. Ürün adı NULL olan satırları gösterin.
--Verilen Employees tablosunu kullanarak her çalışanın yöneticisiyle birlikte bir liste oluşturun.
--Verilen Products tablosunu kullanarak her kategorideki en pahalı ürünleri ve bu ürünlerin farklı fiyatlara sahip olup olmadığını sorgulayın.
--Verilen Orders ve OrderDetails tablolarını kullanarak bu tabloları birleştirin ve her siparişin detaylarını sipariş ID'sine göre artan sırada listeleyin.
--Verilen Employees ve Orders tablolarını kullanarak her çalışanın kaç tane sipariş işlediğini listeleyin. Sipariş işlemeyen çalışanlar da gösterilsin.
--Verilen Products tablosunu kullanarak bir kategorideki ürünleri kendi arasında fiyatlarına göre karşılaştırın ve fiyatı düşük olan ürünleri listeleyin.
--Verilen Products ve Suppliers tablolarını kullanarak tedarikçiden alınan en pahalı ürünleri listeleyin.
--Verilen Employees ve Orders tablolarını kullanarak her çalışanın işlediği en son siparişi bulun.
--Verilen Products tablosunu kullanarak ürünleri fiyatlarına göre gruplandırın ve fiyatı 20 birimden fazla olan ürünlerin sayısını listeleyin.
--Verilen Orders ve Customers tablolarını kullanarak 1997 ile 1998 yılları arasında verilen siparişleri müşteri adıyla birlikte listeleyin.
--Verilen Customers ve Orders tablolarını kullanarak hiç sipariş vermeyen müşterileri listeleyin.



--SELECT C.ContactName, O.OrderID, O.OrderDate
--FROM Customers C
--INNER JOIN Orders O ON C.CustomerID = O.CustomerID;



--SELECT S.ContactName, P.ProductName
--FROM Suppliers S
--LEFT JOIN Products P ON S.SupplierID = P.SupplierID;



--SELECT O.OrderID, O.OrderDate, E.FirstName, E.LastName
--FROM Orders O
--LEFT JOIN Employees E ON O.EmployeeID = E.EmployeeID;



--SELECT C.ContactName, O.OrderID, O.OrderDate
--FROM Customers C
--FULL JOIN Orders O ON C.CustomerID = O.CustomerID;



--SELECT P.ProductName, C.CategoryName
--FROM Products P
--CROSS JOIN Categories C;



--SELECT C.ContactName, O.OrderID, O.OrderDate, E.LastName, E.LastName
--FROM Orders O
--INNER JOIN Customers C ON O.CustomerID = C.CustomerID
--LEFT JOIN Employees E ON O.EmployeeID = E.EmployeeID
--WHERE strftime('%Y', O.OrderDate) = '1998';



--SELECT C.ContactName, COUNT(O.OrderID) AS "SİPARİŞ SAYILARI"
--FROM Orders O
--INNER JOIN Customers C ON O.CustomerID = C.CustomerID
--GROUP BY C.ContactName
--HAVING COUNT(O.OrderID) > 5;



--SELECT P.ProductName, SUM(OD.Quantity) AS TotalQuantity, SUM(OD.Quantity * OD.UnitPrice) AS TotalRevenue
--FROM "Order Details" OD
--INNER JOIN Products P ON OD.ProductID = P.ProductID
--GROUP BY P.ProductName;



--SELECT C.ContactName, O.OrderID, O.OrderDate
--FROM Customers C
--INNER JOIN Orders O ON C.CustomerID = O.CustomerID
--WHERE C.ContactName LIKE 'B%';



--SELECT C.CategoryName, P.ProductName
--FROM Categories C
--LEFT JOIN Products P ON C.CategoryID = P.CategoryID



--SELECT E.EmployeeName AS Employee, M.EmployeeName AS Manager
--FROM Employees E
--LEFT JOIN Employees M ON E.ReportsTo = M.EmployeeID;



--SELECT CONCAT(E.FirstName, ' ', E.LastName) AS "ÇALIŞAN",CONCAT(M.FirstName, ' ', M.LastName) AS "YÖNETİCİ"
--FROM Employees E
--LEFT JOIN Employees M ON E.ReportsTo = M.EmployeeID;



--WITH MaxPrices AS 
--    (SELECT CategoryID, MAX(UnitPrice) AS MaxPrice
--    FROM Products
--    GROUP BY CategoryID)
--SELECT P.ProductName, P.CategoryID, P.UnitPrice, 
--       CASE 
--           WHEN COUNT(DISTINCT P.UnitPrice) > 1 THEN 'Yes'
--           ELSE 'No'
--       END AS HasDifferentPrices
--FROM Products P
--INNER JOIN MaxPrices M ON P.CategoryID = M.CategoryID AND P.UnitPrice = M.MaxPrice
--GROUP BY P.ProductID, P.ProductName, P.CategoryID, P.UnitPrice;



--SELECT O.OrderID, O.OrderDate, OD.ProductID, OD.Quantity, OD.UnitPrice
--FROM Orders O
--INNER JOIN "Order Details" OD ON O.OrderID = OD.OrderID
--ORDER BY O.OrderID ASC;



--SELECT CONCAT(E.FirstName, ' ',E.LastName) AS "ÇALIŞAN", COUNT(O.OrderID) AS "İŞLEDİĞİ SİPARİŞ"
--FROM Employees E
--LEFT JOIN Orders O ON E.EmployeeID = O.EmployeeID
--GROUP BY E.FirstName, E.LastName;



--WITH MaxCategoryPrices AS
--    (SELECT CategoryID, MAX(UnitPrice) AS MaxPrice
--    FROM Products
--    GROUP BY CategoryID)
--SELECT P.ProductName, P.CategoryID, P.UnitPrice
--FROM Products P
--INNER JOIN MaxCategoryPrices MCP ON P.CategoryID = MCP.CategoryID
--WHERE P.UnitPrice < MCP.MaxPrice
--ORDER BY P.CategoryID, P.UnitPrice;



--WITH MaxPrices AS
--    (SELECT SupplierID, MAX(UnitPrice) AS MaxPrice
--    FROM Products
--    GROUP BY SupplierID)
--SELECT P.ProductName, S.ContactName, P.UnitPrice
--FROM Products P
--INNER JOIN Suppliers S ON P.SupplierID = S.SupplierID
--INNER JOIN MaxPrices MP ON P.SupplierID = MP.SupplierID AND P.UnitPrice = MP.MaxPrice;



--SELECT CONCAT(E.FirstName, ' ', E.lastname) AS "ÇALIŞAN", O.OrderID AS "SİPARİŞ NO", O.OrderDate AS "EN SON İŞLEDİĞİ SİPARİŞ"
--FROM Employees E
--INNER JOIN Orders O ON E.EmployeeID = O.EmployeeID
--WHERE O.OrderDate = (SELECT MAX(OrderDate) FROM Orders WHERE EmployeeID = E.EmployeeID);



--SELECT COUNT(*) AS ProductCount
--FROM Products
--WHERE UnitPrice > 20;



--SELECT C.ContactName, O.OrderID, O.OrderDate
--FROM Orders O
--INNER JOIN Customers C ON O.CustomerID = C.CustomerID
--WHERE O.OrderDate BETWEEN '1997-01-01' AND '1998-12-31';



--SELECT C.ContactName
--FROM Customers C
--LEFT JOIN Orders O ON C.CustomerID = O.CustomerID
--WHERE O.OrderID IS NULL;
